1.循环不变式
	用于理解算法正确性，类似数学归纳法。包括：
（1)初始化：循环的第一次迭代之前，它为真
（2)保持：如果循环的某次迭代之前它为真，那么下次迭代之前它仍为真
（3)终止：在循环终止时，不变式为我们提供一个有用的性质，证明算法正确性

2.时间复杂度
（1)最坏情况与平均情况分析。
	一般研究最坏情况时间复杂度，有时候也考虑平均或者期望。
（2)符号
	Θ(g(n) = {f(n):存在正常量c1,c2和n0,使得对所有n>=n0,有0<=c1g(n)<=f(n)<=c2g(n)}
	θ(g(n) = {f(n):存在正常量c1,c2和n0,使得对所有n>=n0,有0<=c1g(n)<f(n)<c2g(n)}
	O(g(n) = {f(n):存在正常量c和n0,使得对所有n>=n0,有0<=f(n)<=cg(n)}
	o(g(n) = {f(n):存在正常量c和n0,使得对所有n>=n0,有0<=f(n)<cg(n)}
	Ω(g(n) = {f(n):存在正常量c和n0,使得对所有n>=n0,有0<=cg(n)<=f(n)}
	ω(g(n) = {f(n):存在正常量c和n0,使得对所有n>=n0,有0<=cg(n)<f(n)}

3.求解递归式
（1)代入法
	-猜测解的形式
	-用数学归纳法求出解中的常熟，并证明解是正确的
（2)递归树
（3)主方法
	主定理:令a>=1,b>1是常数，f(n)是一个函数，T(n)是定义在非负整数上的递归式
			T(n) = aT(n/b) + f(n)
	-若对某个常数e>0有f(n)=O(n^(logb(a-e))),则T(n)=Θ(n^(logba))
	-若f(n)=Θ(n^(logba)),则T(n)=Θ(n^(logba)log2n)
	-若对某个常数e>0有f(n)=Ω(n^(logb(a+e))),且对某个常数c<1和所有足够大的n有af(n/b)<=cf(n),则T(n)=Θ(f(n));
	直观上比较n^(logba)和f(n)，T(n)为大的，如果两者相当，则多乘个log2 n。

4.指示器随机变量
	给定一个样本空S和一个事件A，那么事件A对应的指示器随机变量I{A}定义为	
	I{A} = 1(A发生)/0(A不发生)
	E[XA]=Pr{A},n个指示器随机变量总和的期望值
	例子：
	求抛3次硬币，正面向上硬币数
	E(X)=ΣE(Xi)=1.5
	
