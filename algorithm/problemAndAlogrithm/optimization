优化算法
1.模拟退火(SA,Simulated Annealing)
（1）爬山算法（Hill Climbing）
		爬山算法是一种简单的贪心搜索算法，该算法每次从当前解的临近解空间中选择一个最优解作为当前解，直到达到一个局部最优解。
		爬山算法实现很简单，其主要缺点是会陷入局部最优解，而不一定能搜索到全局最优解。
（2）算法思想
		设置一个温度T，每次迭代温度降低T *= delta，直到T降到一定温度Tmin结束迭代。
		（这里主循环是通过次数来控制迭代结束，也可以在过程中发生某种条件时提前结束迭代）
		每次迭代寻找新解与当前解比较（一般是在当前解附近，也可以直接随机），如果更优则替换当前解，否则，以一定概率替换当前解。
		但随着温度的降低（迭代次数的增加），这个概率是不断降低的。（P（dE) = exp(dE/T))
（3）伪代码
		// J(y)		在状态y时的评价函数值
		// Y(i)		当前的状态
		// Y(i+1)	下一个新状态
		// delta	用于控制降温的快慢，0<delta<1
		// T			系统的温度
		// Tmin		温度下限
		while(T > Tmin){
			dE = J(Y(i+1) - J(Y(i));
			if(dE >= 0){
				Y(i+1) = Y(i);
			}else{
				if(exp(dE/T) > random(0,1)){
					Y(i+1) = Y(i);
				}
			}
			T *= delta;
			i++;
		}
（4） 参考文献
		http://blog.csdn.net/acdreamers/article/details/10019849
		http://www.cnblogs.com/heaad/archive/2010/12/20/1911614.html
		
2.遗传算法 ( GA , Genetic Algorithm )
（1）进化论知识
		种群(Population)：生物的进化以群体的形式进行，这样的一个群体称为种群。
　　个体：组成种群的单个生物。
　　基因 ( Gene ) ：一个遗传因子。 
　　染色体 ( Chromosome ) ：包含一组的基因。
　　生存竞争，适者生存：对环境适应度高的、牛B的个体参与繁殖的机会比较多，后代就会越来越多。
适应度低的个体参与繁殖的机会比较少，后代就会越来越少。
　　遗传与变异：新个体会遗传父母双方各一部分的基因，同时有一定的概率发生基因变异。
		简单说来就是：繁殖过程，会发生基因交叉( Crossover ) ，基因突变 ( Mutation ) ，适应度( Fitness )低的个体会被逐步淘汰，
而适应度高的个体会越来越多。那么经过N代的自然选择后，保存下来的个体都是适应度很高的，其中很可能包含史上产生的适应度最高的那个个体。
（2）算法思想
		编码：用字符串表示基因，如二进制编码的0,1表示0-1背包中的取舍，用三位二进制表示0-7的取值。
		初始化种群：随机制定n个个体组成一个初始种群。
		适应度计算：可以取目标函数（不一定合适）来计算每个个体的适应度。
		选择：选择适应度较高的个体来产生新的种群。可以通过个体适应度占总适应度的比例来刻画其被选中的概率，也可以用其他选中方法。
		构建新种群：一般通过交叉和变异来构建新种群。
		交叉：选择两个个体，随机选择其编码的一段进行交换完成交叉，产生两个新个体
		变异：随机选择编码的某一段取反或类似操作，变异出新个体。
（3）伪代码
		/*
		* Pc：交叉发生的概率
		* Pm：变异发生的概率
		* M：种群规模
		* G：终止进化的代数
		* Tf：进化产生的任何一个个体的适应度函数超过Tf，则可以终止进化过程
		*/
		初始化Pm，Pc，M，G，Tf等参数。随机产生第一代种群Pop
		do
		{ 
		　　计算种群Pop中每一个体的适应度F(i)。
		　　初始化空种群newPop
		　　do
		　　{
		　　　　根据适应度以比例选择算法从种群Pop中选出2个个体
		　　　　if ( random ( 0 , 1 ) < Pc )
		　　　　{
		　　　　　　对2个个体按交叉概率Pc执行交叉操作
		　　　　}
		　　　　if ( random ( 0 , 1 ) < Pm )
		　　　　{
		　　　　　　对2个个体按变异概率Pm执行变异操作
		　　　　}
						将2个新个体加入种群newPop中
				} until ( M个子代被创建 )
				用newPop取代Pop
		}until ( 任何染色体得分超过Tf， 或繁殖代数超过G )
（4）优化改进
		精英主义(Elitist Strategy)选择：是基本遗传算法的一种优化。为了防止进化过程中产生的最优解被交叉和变异所破坏，
可以将每一代中的最优解原封不动的复制到下一代中。
		插入操作：可在3个基本操作的基础上增加一个插入操作。插入操作将染色体中的某个随机的片段移位到另一个随机的位置
（5）参考文献
		http://www.cnblogs.com/heaad/archive/2010/12/23/1914725.html
		http://blog.csdn.net/b2b160/article/details/4680853/