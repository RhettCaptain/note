1.随机数排序
问题：
    随机生成n个随机整数，去重，排序
方法：
    （1）数组哈希表
    建立一个bool数组，下标做键，与数字对应。出现过值为true，否则位false；
    （2）set容器
    加入STL set容器输出

2.进制转换
问题：
    接受一个十六进制数值字符串，输出该数值的十进制字符串
方法：
    （1）自带转换
    int n;scanf("%x",&n);printf("%d",n);
    int n;cin >> hex >> n;cout << n;
    （2）字符串操作
    将16进制字符转换成int，对于字符串中的字符依次累加，如
    int num=0;
    for(int i=2;i<len;i++){
        num = num<<4; 
        num+=a2i(str[i]);
    }
    注意对0x前缀的处理。

3.分解质因数
问题：
    分解质因数，并按升序输出
方法：
    从2依次尝试整除该数，直到该数本身。如果能则输出一个质因数，并更新该数。如果只能被自身整除了，则分解完毕。
    while (input != 1){
        for (int i = 2; i <= input; i++){
            if (input % i == 0){
                input /= i;
                cout << i << ' ';
                break;
            }
        }
    }

4.四舍五入
问题：
    输入浮点数，四舍五入输出近似整形
方法：
    +0.5强制转型。(int)(f+0.5)

5.合并表记录
问题：
    对表索引相同的记录进行合并，输出按照key值升序进行输出。
方法：
    （1）数组哈希表
    索引对应下标做键，记录做值存入相应下标位置。数组默认-1，插入时-1插入，否则累加。按序输出数组中的非-1项的下标和值。
    （2）STL map容器
    存入map容器，如果键存在，则累加；否则插入。
    （3）结构体链表
    定义一个结构体链表节点，插入时，如果链表为空则插入；如果当前节点索引比新节点的大，则新节点做表头；如果当前节点索引与新节点一样，则更新值；
	如果下一个节点的索引比新节点的大，则将新节点插入当前节点和下一节点之间；如果一直没有插入，则在最后插入。完成后输出。

6.1.从右向左读不重复数字
问题：
    输入一个int型整数，按照从右向左的阅读顺序，返回一个不含重复数字的新的整数。
方法：
    （1）字符串处理+禁忌表
    读入字符串，从右往左输出不在禁忌表中的字符，并加入禁忌表。如果字符串读完或者禁忌的数字达到10个则停止输出。
    （2）STL stack+禁忌表
    读字符push入stack，实现逆序输出，其他同上。
    （3）数值%10，/10实现逆序+禁忌表
    读入数值，每次%10,得到最右位，/10实现移位。其他同上。
    while(n>0){
        int bit = n%10;
        if(!exist[bit]){
            num*=10;num+=bit;exist[bit] = true;existCount++;
        }
        n/=10;
    }
6.2.数值逆序输出
问题：
    输入一个整数，将这个整数以字符串的形式逆序输出
    程序不考虑负数的情况，若数字含有0，则逆序形式也含有0，如输入为100，则输出为001
方法：
    （1）字符串处理
    读字符，逆序存入字符串数组，然后从索引处输出。
    （2）STL stack
    同上
    （3）STL vector 反向输出
    rbegin(),rend(),注意迭代器类型
    （4）数值%10/10 + 格式化输出
    cout.width(len);cout.fill('0');

7.字符个数统计
问题：
    计算字符串中含有的不同字符的个数。字符在ACSII码范围内(0~127)。
方法：
    （1）禁忌表
    设置128位禁忌表，出现为true，最后统计true个数
    （2）STL set
    存入set，统计最后set的size
