1.declare class does not name a type
出现这个编译错误主要有四个可能原因，现总结如下：
	引用的类命名空间未包含
	引用的类头文件未包含
	包含了头文件，或者已经前置声明了，则说明所引用的类名写错。
	循环引用头文件
C/C++ 中头文件开始习惯使用 #ifndef ... #define ... #endif 这样的一组预处理标识符来防止重复包含。
但这样有时候有时仍会带来缺乏声明的问题，需要通过前置声明解决。
如head1.h中定义了bool func(ClassA* CA);  func 函数声明之前并没有发现 ClassA 类型定义，该定义在函数声明的后面，这时候如果能在head1.h 的函数声明之前加上 ClassA CA; 的前置声明，就不会在编译的时候报找不到 ClassA 的定义的错误了。
参考网址：http://blog.csdn.net/hazir/article/details/38600419