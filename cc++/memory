内存模型
1.自动存储、静态存储和动态存储
（1）自动存储
	一般的变量声明都是自动存储，其生命周期和作用域为包含他的代码块。
（2）静态存储
	静态存储是整个程序执行期间都存在的存储方式，使其静态的方法有：在函数外定义它，或使用static声明
示例：
void inc(){ static int a=1; a++; cout << a << endl;}
int main(){inc();inc();inc();}
//输出1,2,3
（3）动态存储
	前两种都在栈（stack）中存储，使用new/delete在堆（heap）或自由存储空间（free store）存储，称为动态存储。前两者内存分配一般都是连续的，后者不连续，难以跟踪。

2.内存泄露
	new了但没delete会造成内存泄露。包含指针的内存由于作用域规则和对象生命周期的原因而释放，但内存上分配的变量或结构却继续存在。由于指向该内存的指针无效，故无法访问这块内存，导致内存泄露。
	内存泄露会导致内存耗尽，或则自身程序或相关程序崩溃。



