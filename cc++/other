1.定义全局变量,常量
extern：.h中extern char g_str[]  // 声明全局变量g_str
			.cpp中char g_str[] = " 123456"   // 定义全局变量g_str
static：static修饰的全局变量声明与定义同时进行，
				static修饰全局变量的作用域只能是本身的编译单元，也就是说它的“全局”只对本编译单元有效
				extern和static不能同时修饰一个变量；
				如.h中static char g_str[] = " 123456"   
const:const修饰的全局常量据有跟static相同的特性，即它们只能作用于本编译模块中，
			但是const可以与extern连用来声明该常量可以作用于其他编译模块中
			const的常量不可更改

2.获取数组长度
	sizeof((x)) / sizeof(x[0])

3.参数传递
	（1）值传递
		实际上是在函数内部创建了形参的副本，不改变形参的实际值。
	（2）引用传递
			操作的是形参地址上的值，只不过起了个别名，可以改变形参的实际值。
	（3）指针传递
			函数内部要对指针指向的对象进行操作才会改变形参，如
			void test(int *argc,char **args){
					*argc = 1;					//要对指向的对象赋值。
					*args = "abc";
				//char *tmp = *(args+1);  如果不行，不行加上这句试试
					*tmp = "def";
			}
			int main(int *argc,char **args){
				int a = 2;
				char **str = (char**)malloc(10);	//需要分配内存空间
				test(&a,str);
				cout << a << endl;	//输出1
				cout << *(str+1) <<endl;	//输出def
			}
			
