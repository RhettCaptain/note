聊天软件项目  

一、聊天界面
1.布局
（1）BorderLayout（边框布局）最基础，默认。
   frm.setLayout(new BorderLayout());	//可以省略
   frm.add(btn1,BorderLayout.SOUTH);frm.add(btn2,BorderLayout.CNETER);
  //中心最大，四边保留最小空间。
 （2）GridLayout(表格布局）
   JPanel panel1 = new JPanel(new GridLayout(3,2));
  （3）FlowLayout（流体布局）
    整体在上面第一行中间，从左到右尽可能小的显示。
  （4）绝对定位
    为了保证可移植性，一般不用，但如果平台确定，也可以用。
 2.控件
    文字对象:JLabel，单行文本框：JTextField，多行文本框：JTextArea，密码文本框：JPasswordField，
    滚动条：JScrollPane（使用：new JScrollPane(JTextArea txtArea))
    按钮：JButton，下拉框：JComboBox
3.说明
    现在一般HTML相关技术（包括HTML,JavaScript，CSS等）做前端/界面,Java做后端/服务器端。
    这种编程模式叫做Java Web或J2EE。所以这里不强调Java界面设计。 
   
二、事件响应
1.接口：
    按键接口ActionListener，方法actionPerformed，按键内容用arg0.getActionCommand()得到。
2.字符串内容比较：
    String s1 = new String("abc"), String s2 = new String("abc"), String s3 = "abc", String s4 = "abc";
    s1 == s2 是false，因为s1,s2是对象，s3 == s4是ture，因为s3,s4是常量。
    比较字符串可以用equals方法比较哈希值，s1.equals("abc")是true，txtName.getText.equals("xxx")可以比较用户名。
3.静态概念（类）：
    （1）类声明的时候，静态就存在了。（2）无论产生多少对象，静态都只有一份（共享，相互影响）
      因此，尽量少用静态。
4.上溯与下溯
（1）下溯
    考虑Class FrmLogin extends JFrame; JFrame w = new FrmLogin。即将子类作为父类对象赋给父类变量。
    这样是可行的，但是作为子类的特有方法就无法使用了，要使用可以下溯，如((FrmLogin)w).setVisible(true)；
（2）上溯
    在我们实例化一个子类对象时，其实系统会隐式的创建父类对象，如果我们要使用父类方法（即使该方法已被重写）或父类变量（不建议），可以使用super上溯，如super.paint(g);实际上，super和this都是指针，不过this指向当前类的对象，super指向当前类的父类对象。

三、IO流
1.操作机制
	三个对象：CPU，内存，外设（硬盘，网络，显示器，键盘，鼠标。。。）
	三个步骤：（1）定位。知道要操作的外设在哪。如硬盘地址，网络端口。。
			    （2）建立管道。外设到内存是I（input），内存到外设是O（output）
			    （3）操作管道。有风险，如网络不通，硬盘损坏等。需要try catch保护。
2.文件操作（字节流）
	文件地址：因为\是转义符，所以地址用/或者\\表示。
	相关类：File，FileInputStream，FileOutputStream
	例    子：//定位
			File fi = new File("D:\\in.txt");		
			File fo = new File("D:||out.txt");
			//建立管道
			FileInputStream fis = new FileInputStream(fi);
			FileOutputStream fos = new FileOutputStream(fo);
			//操作管道
			fos.write(fis.read());
	IO流特点：过了的就过了，比如fis.available是文本的字符数，read一次后，available就会少一个。又比如“abc”，				fis.read()第一次是"a",第二次是“b".
3.字符流
	说    明：字节流升级版，处理文本更好，如可以一行一行读取。
	相关类：FileReader(对应FileInputStream)，FileWriter(对应FileOutputStream)
	缓存机制：攒到换行或某一定情况再操作。
	高级类：BufferedReader,BufferedWriter,PrintWriter(BufferWriter升级版)
	例    子：File f = new File("D:\\in.txt);
			FileReader fr = new FileReader(f);
			BufferedReader br = new BufferedReader(fr);
			FileWriter fw = new FileWriter(br);
			fw.write(br.readLine());
			fw.flush();	//缓存区需要刷新才会强制写入，否则，如果缓存区，随着程序的结束，垃圾回收机制就会将程序中所有出现的对象，包括缓冲区都给清除掉。除了flush()方法，也可以通过close()方法，关闭后也会自动调用flush().
4.异常机制
	catch可以catch各类异常，如catch(FileNotFoundException e){ }
							  catch(IOException e){ }
							  catch(Exception e)	//最后加上这个可以包含一切异常。

四、网络通信
1.基本机制：
	（1）首先要有物理连接。无论铜缆还是光纤，都要有一定的信号特征。这一层叫物理层协议。
	（2）单个网络通信机制-发送：
		令牌环（已淘汰）：只有拥有令牌环的机器有权利发送，依次传递令牌。
		以太网（机器数量不能太多）：每台机器发送前，检查有没有信号，有等待、没有发送。
		虚拟链路（交换机）：通过交换机建立虚拟链路。每台机器都连载交换机上，机器A要连机器B，则交换				机在AB间建立虚拟链路。
	（3）单个网络通信机制-接收：
		在一个网络中传播数据实际上是广播的，即发送的信息，网络中的每台计算机都能收到。发送的信息中有目标	的地址，即MAC地址。该地址被写在每一块网卡上，接收计算机的MAC地址如果和信息上的目标地址一致，则会	接收，否则会忽略。
	（4）互联网通信：
		IP地址：一种支持跨网络的地址机制。a.b.c.d,包括网络号和主机号。例如a.b是网络号，c.d是主机号。具体按a	的不同分。也可以通过子网掩码来识别，如子网掩码是255.2555.255.0，那么网络号就是a.b.c。外网/公网ip是全球	唯一的，而有一些ip则被留做内网ip，如127.0.0.1/localhost是回转地址，指向本机。以及常见的192.168.0.x。一个	路由器建立的内网，路由器设置地址192.168.0.1网络中设备的内网地址192.168.0.12之类的。但实际上，如果路由	器即这个内网连入外网的话，每个设备都会有一	个外网ip，路由器或网关代理软件会起到公私地址翻译的作用。
	其他可参考http://bbs.tianya.cn/post-it-678527-1.shtml
		网关：将两个网络连接在一起的设备。比如网络A里的设备a要连接网络B里的设备b。a的网关联系DNS服务器	找到网络B的地址，a通过网关联系到b的网关，再联系到b。
		网络端口：一个设备上可能有很多程序，每个程序分配一个端口用以区分。发来的信息会携带端口信息，符合	这个端口的程序会响应。如80是HTTP协议的端口，是浏览器访问的默认端口，21是FTP传送文件的协议端口。	8080是网络服务器实验端口。尽量用1024以上的端口。
2.程序实现：
	（1）套接字（Socket）：Socket对象成对出现。
		在服务器端ServerSocket ss = new ServerSocket(8000);	//8000是端口号
				    Socket s = ss.accept();	//语句1
		在客户端 Socket s = new Socket("127.0.0.1",8000);	//参数分别是ip和端口。
		要先开服务器程序，后开客户端。语句1会一直执行，等到客户端打开，配对成功往下执行。
	（2）流传输（和文件流类似）
		输入：InputStream is = s.getInputStream();	//定位
			    InputStreamReader isr = new InputStreamReader(is)		//建立管道
			    BufferedReader br = new BufferedReader(isr)	//高级流
			    String msg = br.readLine();			//管道操作。
		输出：OutputStream os =s.getOutputStream();	//定位
			    OutputStreamWriter osw = new OutputStreamWriter(os);	//建立管道
			    PrintWriter pw = new PrintWriter(osw, true);	//高级流，加了参数true则输出不用flush或close了。
			    pw.println("xx");				//管道操作。

五、数据库访问：
1.MySQL-安装、配置、登陆（命令一般不用加分号）
	下载mysql，下载完配置环境变量，并在cmd中使用 mysqld --install MySQL安装服务。
	启动服务: net start MySQL  停止服务: net stop MySQL  卸载服务: sc delete MySQL。
	在cmd运行mysql -uroot -p以root身份进入客户端。(-u后面接用户名，-p指需要密码).
	grant select,delete,update,insert on *.* to newuser @'%' identified by '1234':创建/更改新用户newuser（可以换为任意名字),使其在任意地点(%是通配符，可以换成localhost等...)，对任意数据库，数据表（*是通配符，x.y代表x数据库中的y表)，有查询，删除，更新，插入的权利。
2.MySQL-使用（命令一般要加分号）
（1）数据库：创建-create database QQ;，显示-show databases;，选择-use QQ，查看选择的数据库-select database();，删除-drop database QQ;
（2）数据表：创建-create table user(name varchar(5) primary key, password int, sex char(2) check(sex in('男','女')));
user是表名，name列是主键（唯一且非空），字符(注意和char的区别）。password是数字，性别在男女中二选一 。
修改-添加列-alter table user add teacher varchar(10);，修改-删除列-alter table user drop teacher;，修改-修改列类型-alter table user modify teacher varchar(20);，修改-修改列约束-alter table user modify teacher varchar(20) not null;，修改-修改列名-alter table user change teacher T varchar(20);。
（3）数据：添加-insert into user values('rhett',123,'男');或者insert into user (name, sex) values('rhett','男');，修改-update user set password=111 where name='rhett';，删除-delete from user where name = 'rhett';，查询-select(列名) from(表名) where(条件);如select name from user where sex='男';，高级查询-all,any,in,not in，高级查询-聚合函数-max(),min()...，高级查询-group by(分组语句)如 select course, sum(grade) from students group by course;，高级查询-模糊查询-select * from user where name like'李%';，高级查询-表连接-select * from user join admin on user.name = admin.name;。
3.数据库设计：
目标：（1）消除数据冗余（2）为了编程便利
范式：（1）第一范式-得到纯二维表（2）消除非主键依赖（信息冗余）（3）消除函数依赖关系（如价格=数量*单价）
4.JAVA-使用数据库：
（1）下载mysql-connector-java-5.0.4-bin.jar(JDBC驱动程序)，放在JDK\jre\lib\ext。在Eclipse-Window-Preferences-Java-Installed JREs-Edit-Add External JARs安装该组件。
（2）查询
	//连接
	import java.sql.*;
	Class.forName("org.gjt.mm.mysql.Driver");
	Connection cn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/qq","root","123");
	Statement st = cn.createStatement();
	ResultSet rs = st.executeQuery("SQL语句“);		//操作
	或者
	//连接
	import java.sql.*;
	Class.forName("org.gjt.mm.mysql.Driver");
	Connection cn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/qq","root","123");
	//操作
	PreparedStatement ps = cn.prepareStatement("select * from user where name = ? and pass word =?");
	ps.setString(1,stringName);
	ps.setString(2,stringPsw);
	ResultSet rs = ps.executeQuery();
（3）修改数据
	st.executeUpdate(" ");
5.反射：
（1）静态语句块
class A 
{
	static{ };	//静态语句块，这里面的语句在new的时候调用，早于构造函数，且只执行一次。
}
（2）Class.forName();
	-该方法能自动调用运行类中的静态语句块
	Class.forName("org.gjt.mm.mysql.Driver");
	-该方法使用字符串来new对象，返回Class，然后用Class对象获得Object对象，
	如法师类，战士类都继承自英雄类。
	String choice = "法师";
	Class  c = Class.forname(choice);
	Object o = c.newInstance();
	英雄 h = (英雄) o;
	-Class对象有方法得到Method对象，承接上面，如英雄类有个kill()接口，有两个参数（int,String)
	Method m = c.getMethod("kill",int.class,String.class);
	m.invoke(o,10,"aa");
（3）我们得到一个类，在完全不了解的情况下，可以用程序探测出这个类的成员变量和成员方法，甚至调用这些方法，我们称这个能力为反射。


六、多用户访问
1.思路：
	服务器端的Socket就像餐厅的服务员，为了让每个客人都能得到服务，我们就需要一个专门迎宾的服务员（配对握手）,迎宾后在送给厅内服务员服务（具体服务）。
2.代码实现：
	定义一个MyService类以实现配对后的具体工作，该类继承Thread类，使其可以当线程用。
	在主类QQServer的主程序编写：
	try{
		ServerSocket ss = new ServerSocket(8000);
		while(true){
			Socket s =ss.accept();
			MyService t = new MyService();
			t.setSocket(s);	//	编写函数传递socket对象
			t.start();
		}
	}
	catch...
