1.删除有内容的文件夹
	rm -rf <name>
2.查看隐藏文件
	ls -ah
3.source <file>
	执行脚本
4.重命名
	mv <file> <new_name>	//和移动一样
5.切换用户/超级用户
	（1)su	//切换到超级用户
	（2)su 用户名	//切换到用户
	（3)有的电脑root用户没有密码，通过sudo passwd root设置
	（4)切换用户后，~/.bashrc等文件可能会变，即环境可能需要重新配置
6.cat主要有三大功能：
	（1）.一次显示整个文件。$ cat filename
	（2）.从键盘创建一个文件。$ cat > filename  
   		只能创建新文件,不能编辑已有文件.
	（3）.将几个文件合并为一个文件： $cat file1 file2 > file
7.查看和杀死进程
	ps -e	查看进程
	kill <进程号>	杀死进程
8.chmod 权限管理
	(1)Linux/Unix 的档案调用权限分为三级 : 档案拥有者、群组、其他。利用 chmod 可以藉以控制档案如何被他人所调用
	参数 : 
	mode : 权限设定字串，格式如下 : [ugoa...][[+-=][rwxX]...][,...]，其中 
	u 表示该档案的拥有者，g 表示与该档案的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。 
	+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限。 
	r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。 
	-c : 若该档案权限确实已经更改，才显示其更改动作 
	-f : 若该档案权限无法被更改也不要显示错误讯息 
	-v : 显示权限变更的详细资料 
	-R : 对目前目录下的所有档案与子目录进行相同的权限变更(即以递回的方式逐个变更)
	例子：chmod -R =u *	//把当前目录及子目录下文件都设为该档案拥有者权限
	此外chmod也可以用数字来表示权限如 chmod 777 file 
	语法为：chmod abc file 
	其中a,b,c各为一个数字，分别表示User、Group、及Other的权限。 
	r=4，w=2，x=1 
	若要rwx属性则4+2+1=7； 若要rw-属性则4+2=6； 若要r-x属性则4+1=7。 
	范例： 
	chmod a=rwx file  和 chmod 777 file  效果相同 
	（2)颜色
	绿色表示可执行，蓝色表示文件夹（文件夹一定要可执行，不然无权限访问），红色是压缩文件
	绿底表示other权限
9.cp 复制文件/目录
	将文件file复制到目录/usr/men/tmp下，并改名为file1 
	cp file /usr/men/tmp/file1
	将目录/usr/men下的所有文件及其子目录复制到目录/usr/zh中 
	cp -r /usr/men /usr/zh
	交互式地将目录/usr/men中的以m打头的所有.c文件复制到目录/usr/zh中 
	cp -i /usr/men m*.c /usr/zh
10.配置opencv
	-1.配置库
	sudo gedit /etc/ld.so.conf.d/opencv.conf
	在文尾添加
	/usr/local/lib
	然后
	sudo ldconfig
	完成配置
	-2.添加路径
	sudo gedit /etc/bash.bashrc
	在文尾添加
	PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig
	export PKG_CONFIG_PATH
	-3.可能需要重启
	-4.测试
	（1）命令行
	g++ `pkg-config --cflags opencv` -o hello hello.cpp `pkg-config --libs opencv`
	（2）cmake/ROS
	在CMakeLists添加：
	project( DisplayImage )
	find_package( OpenCV REQUIRED )
	add_executable( DisplayImage DisplayImage.cpp )
	target_link_libraries( DisplayImage ${OpenCV_LIBS} )
11.修改设备权限
	在/etc/udev/rules.d目录下写一个.rules文件，如KERNEL=="ttyS1"  MODE="0777" 即可
	通过ls -l /dev/ttyS1可查看权限

12.安装搜狗输入法
（1）先去官网下载安装
（2）（可能需要）在终端输入im-config,把ibus换成fcitx
（3）（可能需要）输入商店说明的各个指令
（4）重启
（5）终端输入fcitx-config-gtk3或者直接选择输入法。取消选取only show current language
然后搜索sogou选择即可。

13.在程序中执行shell
头文件 #include<stdlib.h>
定义函数 int system(const char * string);
返回值 如果system()在调用/bin/sh时失败则返回127，其他失败原因返回-1。
若参数string为空指针(NULL)，则返回非零值。如果system()调用成功则最后会返回执行shell命令后的返回值，
但是此返回值也有可能为system()调用/bin/sh失败所返回的127

14.杀死某一进程的脚本
#!/bin/sh

NAME=$1
echo $NAME
ID=`ps -ef | grep "$NAME" | grep -v "$0" | grep -v "grep" | awk '{print $2}'`
echo $ID
echo "---------------"
for id in $ID
do
kill -9 $id
echo "killed $id"
done
echo "---------------"

1),将之保存为killprocess.sh
2),调用./killprocess.sh programmename。其中programme可以为程序名字，也可以是启动程序时的命令行，
只要能在ps -ef | grep programmename 之后出现所有的该程序对应的进程即可
来源：http://blog.csdn.net/telnetor/article/details/5555345

15.指定g++头文件路径
(1)在g++中指定路径
  g++ -o main main.cpp -I /includedir
(2)通过环境变量设置
  export CPLUS_INCLUDE_PATH=/includedir
  g++ -o main main.cpp
