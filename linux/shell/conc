基本概念
1.系统架构
应用程序->系统调用->内核->硬件。
操作系统包括系统调用和内核

2.终端
	通常我们在使用 Linux 时，并不是直接与系统打交道，而是通过一个叫做 Shell 的中间程序来完成的，
在图形界面下为了实现让我们在一个窗口中完成用户输入和显示输出，
Linux 系统还提供了一个叫做终端模拟器的程序（Terminal）。
	终端本质上是对应着 Linux 上的 /dev/tty 设备，Linux 的多用户登陆就是通过不同的 /dev/tty 设备完成的，
Linux 默认提供了 6 个纯命令行界面的 “terminal”（准确的说这里应该是 6 个 virtual consoles）来让用户登录。
在物理机系统上你可以通过使用[Ctrl]+[Alt]+[F1]～[F6]进行切换，
当你切换到其中一个终端后想要切换回图形界面，你可以按下[Ctrl]+[Alt]+[F7]来完成。

3.shell
	通常在图形界面中对实际体验带来差异的不是上述的不同发行版的各种终端模拟器，而是这个 Shell（壳）。
有壳就有核，这里的核就是指 UNIX/Linux 内核，Shell 是指“提供给使用者使用界面”的软件（命令解析器），
类似于 DOS 下的 command（命令行）和后来的 cmd.exe 。普通意义上的 Shell 就是可以接受用户输入命令的程序。
它之所以被称作 Shell 是因为它隐藏了操作系统底层的细节。
同样的 UNIX/Linux 下的图形用户界面 GNOME 和 KDE，有时也被叫做“虚拟 shell”或“图形 shell”。

4.快捷键
按键 作用
Ctrl+c 强退
Ctrl+d 键盘输入结束或退出终端
Ctrl+s 暂停当前程序，暂停后按下任意键恢复运行
Ctrl+z 将当前程序放到后台运行，恢复到前台为命令fg
Ctrl+a 将光标移至输入行头，相当于Home键
Ctrl+e 将光标移至输入行末，相当于End键
Ctrl+k 删除从光标所在位置到行末
Alt+Backspace 向前删除一个单词
Shift+PgUp 将终端显示向上滚动
Shift+PgDn 将终端显示向下滚动

5.通配符
字符 含义
*	匹配 0 或多个字符
?	匹配任意一个字符
[list]	匹配 list 中的任意单一字符
[!list]	匹配 除list 中的任意单一字符以外的字符
[c1-c2]	匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]
{string1,string2,...}	匹配 string1 或 string2 (或更多)其一字符串
{c1..c2}	匹配 c1-c2 中全部字符 如{1..10}
例子：touch love_{1..10} 会创建10个文件 love_1,love_2..
find love_[123]会发现三个，find love_[1-3] 发现三个 find love{_1,_3}发现两个。

6.帮助
在 Linux 环境中，如果你遇到困难，可以使用man命令，它是Manual pages的缩写。按下q退出
man <command_name>
如果你知道某个命令的作用，只是想快速查看一些它的某个具体参数的作用，那么你可以使用--help参数