基础
一、数据类型
1.整数
    直接写，如1,-10,0xff等
2.浮点型
    直接写，如3.14,12.3e8等
3.字符串
    用单引号或双引号括起来，如'hello',"world"
    如果包含',"可以用"a'b"或'a"b'
    也可以用\',\"转义
    也可以用r''表示''内部字符串默认不转义
    '''...'''表示多行,r'''...'''表示多行字符串，具体用法再研究下。
4.布尔值
    True,False
    操作符 and or not
5.空值
    None
6.其他
    列表，字典等
7.类型转换
   num = int(str)   将字符串转成数值

二、变量
1.命名
    变量名表示变量，区分大小写，
    英文，数字下划线组成，不能用数字开头
2.常量
    一般用全大写表示常量，如PI=3.14,但实际还是变量
3./，//，%
  10/3=3.3333
  10//3=3
  10%3=1

三、字符串和编码
1.字符编码
（1）ascii码与GB2312
    ascii码127位，适用英语
    GB2312中文码，2个字节，使用中文
（2）Unicode
    通常两个字节（生僻4个），适用所有语言
    但对于只用一个字节的字母，前面补零，浪费空间
（3）UTF-8
    可变长编码，把Unicode字符根据不同的数字大小编码成1-6个字节。节省空间，且与ASCII码兼容。
（4）Python字符串
    采用Unicode编码
    对于单个字符的编码：
    ord()函数获取字符的整数表示，如odr('A')  #65
    chr()函数把编码转换位对应字符，如chr(66) #'B'
    如果直到字符的整数编码，还可以用十六进制写str
    如:>>>'u4e2d\u6587'  #'中文'
(5)bytes类型
    如果进行网络传输，或保存到磁盘上，就需要把以字符位单位的str型字符串转换成以字节为单位的bytes型。
    python对bytes类型的数据用带b前缀的单引号或双引号表示。如：x = b'ABC'
    以Unicode表示的str型可以通过encode()方法编码为指定的bytes。如：
    >>>'ABC'.encode('ascii') #b'ABC'
    >>>'中文'.encode('utf-8') #b'\xe4\xb8\xad\xe6\x96\x87'
---
    反过来，从网络或磁盘上读的字节流是bytes，用decode()方法变成str,如：
    >>>b'ABC'.decode('ascii') #ABC
    >>>b'\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8') #'中文'
---
    可以用len()函数计算str包含多少个字符，如
    >>>len('ABC')  #3
    >>>len('中文')  #2
    也可以计算bytes包含多少字节，如
    >>>len(b'ABC')   #3
    >>>len('中文'.encode('utf-8')) #6
---
    在操作字符串时，为了避免乱码，应始终坚持utf-8编码转换。并将源码保存位utf-8编码。为了让解释器按utf-8读取，需要在头文件写上
    #!/usr/bin/env python3
    # -*- coding: utf-8 -*-
（6）格式化
    % 和c相同，如：
    >>>'hello,%s'%'world'  #'hello,world'
    >>>'hi,%s,you have $%d'%('rhett',1000)  #'hi,rhett,you have 1000'
    >>> '%2d-%02d'%(3,1) #' 3-01'
    %转义用%%


四、列表(list)和元组(tuple)
列表
1.定义
    aList = ['a','bc',3]
2.求长度
    len(aList)
3.访问
    aList[0],aList[1]..
    aList[-1]表示最后一个，以此类推
4.插入
    aList.append('adam')    #追加到末尾
    aList.insert(1,'Jack')  #插入索引1的位置
5.删除
    aList.pop()		#删除末尾
    aList.pop(1)	#删除索引1的位置
6.多维列表
    p = ['asp','php']
    s = ['python','java',p,['rhett','ice']]
    s[0] # 'python'
    s[1][0] #'j'
    s[2][1]  #'php'
    s[3]  #['rhett','ice']
    len(s)  #4
---
元组
7.定义
    aTuple = ('mic','bob','tony')
    元组必须在定义时完成初始化，并且不能修改，其他和列表一样
8.陷阱
    要定义一个只有1个元素的tuple，如果你这么定义：
     >>> t = (1)	#1
    定义的不是tuple，是1这个数！这是因为括号()既可以表示tuple，又可以表示数学公式中的小括号，这就产生了歧义，
因此，Python规定，这种情况下，按小括号进行计算，计算结果自然是1。
    所以，只有1个元素的tuple定义时必须加一个逗号,，来消除歧义：
    >>> t = (1,)	#(1,)
    Python在显示只有1个元素的tuple时，也会加一个逗号,，以免你误解成数学计算意义上的括号。

五、条件判断与循环
1.条件判断
    if age >= 18:	#注意冒号
        print('adult')  #满足时执行所有缩进行
        print('hahah')  #缩进注意一致（虽然不一定是4，但建议是4）
    elif age >= 6:      #elif是else if，没有else if。但可以写else: 然后程序块里在写if，else
        print('teenager')
    else:
        print('kid')
2.循环
（1）for...in循环，依次把list或tuple中的每个元素迭代出来，执行缩进块的语句。
	names = ['Michael', 'Bob', 'Tracy']
	for name in names:	#注意冒号
	    print(name)
（2）while循环
	while n > 0:		#注意冒号
	    sum = sum + n
	    n = n - 2
	print(sum)

六、字典（dict）和集合（set）
1.字典
（1）说明
    dict是字典 dictionary的缩写，在其他语言中也称为map，使用键-值（key-value）存储，具有极快的查找速度。
（2）定义
    d = {'Michael': 95, 'Bob': 75, 'Tracy': 85}
（3）使用
    d['Michael']	#95
